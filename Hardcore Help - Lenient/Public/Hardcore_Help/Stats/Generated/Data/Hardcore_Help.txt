new entry "Target_Help"
type "SpellData"
data "SpellType" "Target"
using "Target_Help"
// Help up <LSTag Tooltip="Downed">Downed</LSTag> characters, or remove Burning, Ensnared, Entangled, Enwebbed, Prone, and Sleeping.
// data "Description" "h23dde6dfg0193g4163g86e1gf1563c648189;6"
// Assist an ally in need. Remove &lt;LSTag Type="Status" Tooltip="BURNING"&gt;Burning&lt;/LSTag&gt;, &lt;LSTag Type="Status" Tooltip="ENSNARED"&gt;Ensnared&lt;/LSTag&gt;, &lt;LSTag Type="Status" Tooltip="RESTRAINED"&gt;Restrained&lt;/LSTag&gt;, &lt;LSTag Type="Status" Tooltip="WEB"&gt;Enwebbed&lt;/LSTag&gt;, &lt;LSTag Type="Status" Tooltip="PRONE"&gt;Prone&lt;/LSTag&gt;, and &lt;LSTag Type="Status" Tooltip="SLEEPING"&gt;Sleeping&lt;/LSTag&gt; from a friendly target. A successful &lt;LSTag Tooltip="Medicine"&gt;Medicine&lt;/LSTag&gt; &lt;LSTag Tooltip="SkillCheck"&gt;Skill Check&lt;/LSTag&gt; will heal a &lt;LSTag Tooltip="Downed"&gt;Downed&lt;/LSTag&gt; friendly target for [1], while a failed check will only stabilise them.
data "Description" "hb45dd793g0674g4592g9627g571ebf59ed61;1"
data "DescriptionParams" "RegainHitPoints(1)"
// You automatically succeed &lt;LSTag Tooltip="Medicine"&gt;Medicine&lt;/LSTag&gt; &lt;LSTag Tooltip="SkillCheck"&gt;Skill Checks&lt;/LSTag&gt; while outside of combat
data "ExtraDescription" "h9b13b016g36e4g490ag9eceg714e8331e872;1"
// data "SpellProperties" "RemoveStatus(SG_Sleeping);RemoveStatus(SG_Helpable_Condition);RemoveStatus(BURNING);RemoveStatus(SG_Prone);RemoveStatus(SG_Restrained);RemoveStatus(PRONE);RemoveStatus(SLEEPING);RemoveStatus(SLEEP);RemoveStatus(ENSNARING_STRIKE);RemoveStatus(WEB);IF(IsDowned()):RegainHitPoints(1);RemoveStatus(HYPNOTIC_PATTERN)"
data "SpellProperties" "RemoveStatus(SG_Sleeping);RemoveStatus(SG_Helpable_Condition);RemoveStatus(BURNING);RemoveStatus(SG_Prone);RemoveStatus(SG_Restrained);RemoveStatus(PRONE);RemoveStatus(SLEEPING);RemoveStatus(SLEEP);RemoveStatus(ENSNARING_STRIKE);RemoveStatus(WEB);RemoveStatus(HYPNOTIC_PATTERN)"
// data "TargetConditions" "Character() and not Self() and (not Enemy() or Player()) and HasHelpableCondition()"
data "TargetConditions" "Character() and not Self() and (not Enemy() or Player()) and HasHelpableCondition() or HasHelpableConditionGG()"
data "SpellRoll" "not Combat() or SkillCheck(Skill.Medicine, 10)"
data "SpellSuccess" "IF(IsDowned()):RegainHitPoints(1,Guaranteed)"
data "SpellFail" "IF(IsDowned()):Stabilize()"

// ==================================== Give chances of getting your action point back after being picked up from a downed state, also restore Reactions ====================================

new entry "DOWNED"
type "StatusData"
data "StatusType" "DOWNED"
using "DOWNED"
// If you reach 0 hit points, you fall Unconscious and must make Death Saving Throws. On 3 successes, you stop bleeding out and become Stable. On 3 failures, you die.
// If you regain any hit points, the condition is removed. If an ally <LSTag Type="Spell" Tooltip="Target_Help">Helps</LSTag> you, you regain 1 hit point.
// data "Description" "h82d41284g4437g4202g859cgb7470b39bc22;3"
// If you reach 0 hit points, you fall Unconscious and must make Death &lt;LSTag Tooltip="SavingThrow"&gt;Saving Throws&lt;/LSTag&gt;. On 3 successes, you stop bleeding out and become Stable. On 3 failures, you die.
// If you regain any hit points, the condition is removed. If an ally successfully &lt;LSTag Type="Spell" Tooltip="Target_Help"&gt;Helps&lt;/LSTag&gt; you, you regain [1].
// When the condition is removed you regain your &lt;LSTag Tooltip="MovementSpeed"&gt;Movement Speed&lt;/LSTag&gt;, a &lt;LSTag Tooltip="BonusAction"&gt;Bonus Action&lt;/LSTag&gt; and a &lt;LSTag Type="ActionResource" Tooltip="ReactionActionPoint"&gt;Reaction&lt;/LSTag&gt;. Additionally, you can regain an &lt;LSTag Tooltip="Action"&gt;Action&lt;/LSTag&gt; if you succeed a &lt;LSTag Tooltip="Constitution"&gt;Constitution&lt;/LSTag&gt; &lt;LSTag Tooltip="SavingThrow"&gt;Saving Throw&lt;/LSTag&gt;.
data "Description" "hb59422cag6cc1g4e11ga977g05f2f1b0fdb1;1"
// data "DescriptionParams" "Distance(1.5)"
data "DescriptionParams" "RegainHitPoints(1)"
// data "OnRemoveFunctors" "ResetCombatTurn();RestoreResource(Movement, 100%, 0);RestoreResource(BonusActionPoint, 100%, 0);"
data "OnRemoveFunctors" "ResetCombatTurn();RestoreResource(Movement, 100%, 0);RestoreResource(BonusActionPoint, 1, 0);RestoreResource(ReactionActionPoint, 1, 0);IF(SavingThrow(Ability.Constitution, 15)):RestoreResource(ActionPoint, 1, 0)"